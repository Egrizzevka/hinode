---
import "reveal.js/dist/reveal.css";

import themeBlack from "reveal.js/dist/theme/black.css?raw";
import themeWhite from "reveal.js/dist/theme/white.css?raw";
import themeLeague from "reveal.js/dist/theme/league.css?raw";
import themeBeige from "reveal.js/dist/theme/beige.css?raw";

export interface Props {
  title: string;
  description: string;
  content: string;
  theme?: "black" | "white" | "league" | "beige";
}

const decideTheme = (theme: Props["theme"]) => {
  console.log(theme);

  switch (theme) {
    case "black":
      return themeBlack;

    case "white":
      return themeWhite;

    case "league":
      return themeLeague;

    case "beige":
      return themeBeige;

    default:
      return themeBlack;
  }
};

const { title, theme, description, content } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />

    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>{title}</title>
  </head>

  <body>
    <style is:inline set:html={decideTheme(theme)}></style>

    <div class="reveal">
      <div class="slides" set:html={content} />
    </div>

    <script type="module" hoist>
      import Reveal from "reveal.js";
      import RevealZoom from "reveal.js/plugin/zoom/zoom.esm.js";
      import RevealNotes from "reveal.js/plugin/notes/notes.esm.js";
      import RevealSearch from "reveal.js/plugin/search/search.esm.js";
      import RevealMarkdown from "reveal.js/plugin/markdown/markdown.esm.js";
      import RevealHighlight from "reveal.js/plugin/highlight/highlight.esm.js";

      Reveal.initialize({
        plugins: [
          RevealZoom,
          RevealNotes,
          RevealSearch,
          RevealMarkdown,
          RevealHighlight,
        ],
      });
    </script>
  </body>
</html>
